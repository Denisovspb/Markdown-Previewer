{"version":3,"sources":["components/Header.jsx","components/Editor.jsx","components/Preview.jsx","App.js","index.js"],"names":["Header","title","fullScreen","onClickFullScreen","buttonClasses","classNames","className","onClick","Editor","onHandleChangeInput","inputValue","hidePreview","setHidePreview","useState","setFullScreen","divClasses","textAreaClasses","onChange","event","value","id","Preview","children","hideEditor","setHideEditor","marked","setOptions","breaks","highlight","code","Prism","languages","javascript","renderer","Renderer","link","href","text","App","setInputValue","target","dangerouslySetInnerHTML","__html","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRA+BeA,MAzBf,YAA2D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,kBAC7BC,EAAgBC,IACpB,iBACA,iBACA,WACA,mBACA,aACA,YACA,eAEF,OACE,sBAAKC,UAAU,mEAAf,UACE,sBAAKA,UAAU,8BAAf,UACa,WAAVL,EAAqB,cAAC,IAAD,CAAQK,UAAU,SAAY,cAAC,IAAD,CAAmBA,UAAU,SAChFL,KAEFC,EACC,cAAC,IAAD,CAAyBI,UAAWF,EAAeG,QAAS,kBAAMJ,OAElE,cAAC,IAAD,CAAqBG,UAAWF,EAAeG,QAAS,kBAAMJ,WCUvDK,MA/Bf,YAAmF,IAAjEC,EAAgE,EAAhEA,oBAAqBC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAC9D,EAAoCC,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBY,EAAnB,KAKMC,EAAaV,IAAW,WAAY,eAAgB,OAAQ,CAAE,eAAgBH,IAC9Ec,EAAkBX,IACtB,SACA,WACA,cACA,OACA,eACA,UACA,CACE,eAAgBH,IAGpB,OACE,sBAAKI,UAAWS,EAAhB,UACE,cAAC,EAAD,CAAQd,MAAM,SAASC,WAAYA,EAAYC,kBAlBzB,WACxBW,GAAeZ,GACfU,GAAgBD,MAiBd,0BACEL,UAAWU,EACXC,SAAU,SAACC,GAAD,OAAWT,EAAoBS,IACzCC,MAAOT,EACPU,GAAG,eCZIC,MAdf,YAA2D,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cACvC,EAAoCX,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBY,EAAnB,KAKA,OACE,sBAAKR,UAAU,6BAAf,UACE,cAAC,EAAD,CAAQL,MAAM,UAAUC,WAAYA,EAAYC,kBAN1B,WACxBW,GAAeZ,GACfsB,GAAeD,MAKZD,M,gCCLPG,IAAOC,WAAW,CAChBC,QAAQ,EACRC,UAAW,SAAUC,GACnB,OAAOC,IAAMF,UAAUC,EAAMC,IAAMC,UAAUC,WAAY,iBAK7D,IAAMC,EAAW,IAAIR,IAAOS,SAC5BD,EAASE,KAAO,SAAUC,EAAMnC,EAAOoC,GACrC,MAAM,4BAAN,OAAmCD,EAAnC,aAA4CC,EAA5C,SAsFaC,MAtCf,WACE,MAAoCzB,mBA9CrB,0pCA8Cf,mBAAOH,EAAP,KAAmB6B,EAAnB,KACA,EAAsC1B,oBAAS,GAA/C,mBAAOF,EAAP,KAAoBC,EAApB,KACA,EAAoCC,oBAAS,GAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KAIA,OACE,qBAAKlB,UAAU,8DAAf,SACE,sBAAKA,UAAU,4CAAf,WACIiB,GACA,cAAC,EAAD,CACEd,oBARkB,SAACS,GAC3BqB,EAAcrB,EAAMsB,OAAOrB,QAQnBT,WAAYA,EACZC,YAAaA,EACbC,eAAgBA,KAGlBD,GACA,cAAC,EAAD,CACED,WAAYA,EACZU,GAAG,UACHG,WAAYA,EACZC,cAAeA,EAJjB,SAKE,qBACEiB,wBAAyB,CACvBC,OAAQjB,IAAOf,EAAY,CAAEuB,SAAUA,KAEzCb,GAAG,UACHd,UAAU,4BCzFxBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b26f7adc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { GrEdit } from 'react-icons/gr';\r\nimport { BsFileEarmarkText } from 'react-icons/bs';\r\nimport { AiOutlineFullscreen, AiOutlineFullscreenExit } from 'react-icons/ai';\r\nimport classNames from 'classnames';\r\n\r\nfunction Header({ title, fullScreen, onClickFullScreen }) {\r\n  const buttonClasses = classNames(\r\n    'align-baseline',\r\n    'cursor-pointer',\r\n    'text-2xl',\r\n    'hover:text-white',\r\n    'transition',\r\n    'delay-150',\r\n    'ease-in-out',\r\n  );\r\n  return (\r\n    <div className=\"flex items-center justify-between bg-green-500 px-8 py-2 text-lg\">\r\n      <div className=\"flex items-center font-bold\">\r\n        {title === 'editor' ? <GrEdit className=\"mr-2\" /> : <BsFileEarmarkText className=\"mr-2\" />}\r\n        {title}\r\n      </div>\r\n      {fullScreen ? (\r\n        <AiOutlineFullscreenExit className={buttonClasses} onClick={() => onClickFullScreen()} />\r\n      ) : (\r\n        <AiOutlineFullscreen className={buttonClasses} onClick={() => onClickFullScreen()} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { React, useState } from 'react';\r\nimport Header from './Header';\r\nimport classNames from 'classnames';\r\n\r\nfunction Editor({ onHandleChangeInput, inputValue, hidePreview, setHidePreview }) {\r\n  const [fullScreen, setFullScreen] = useState(false);\r\n  const onClickFullScreen = () => {\r\n    setFullScreen(!fullScreen);\r\n    setHidePreview(!hidePreview);\r\n  };\r\n  const divClasses = classNames('border-2', 'border-black', 'mb-8', { 'min-h-screen': fullScreen });\r\n  const textAreaClasses = classNames(\r\n    'w-full',\r\n    'border-2',\r\n    'resize-none',\r\n    'h-96',\r\n    'outline-none',\r\n    'text-lg',\r\n    {\r\n      'min-h-screen': fullScreen,\r\n    },\r\n  );\r\n  return (\r\n    <div className={divClasses}>\r\n      <Header title=\"EDITOR\" fullScreen={fullScreen} onClickFullScreen={onClickFullScreen} />\r\n      <textarea\r\n        className={textAreaClasses}\r\n        onChange={(event) => onHandleChangeInput(event)}\r\n        value={inputValue}\r\n        id=\"editor\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import { React, useState } from 'react';\r\nimport Header from './Header';\r\n\r\nfunction Preview({ children, hideEditor, setHideEditor }) {\r\n  const [fullScreen, setFullScreen] = useState(false);\r\n  const onClickFullScreen = () => {\r\n    setFullScreen(!fullScreen);\r\n    setHideEditor(!hideEditor);\r\n  };\r\n  return (\r\n    <div className=\"border-2 border-black mb-8\">\r\n      <Header title=\"PREVIEW\" fullScreen={fullScreen} onClickFullScreen={onClickFullScreen} />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preview;\r\n","import './App.css';\nimport Editor from './components/Editor';\nimport Preview from './components/Preview';\nimport { useState } from 'react';\nimport Prism from 'prismjs';\nimport marked from 'marked';\n\nmarked.setOptions({\n  breaks: true,\n  highlight: function (code) {\n    return Prism.highlight(code, Prism.languages.javascript, 'javascript');\n  },\n});\n\n// INSERTS target=\"_blank\" INTO HREF TAGS (required for Codepen links)\nconst renderer = new marked.Renderer();\nrenderer.link = function (href, title, text) {\n  return `<a target=\"_blank\" href=\"${href}\">${text}</a>`;\n};\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(placeholder);\n  const [hidePreview, setHidePreview] = useState(false);\n  const [hideEditor, setHideEditor] = useState(false);\n  const onHandleChangeInput = (event) => {\n    setInputValue(event.target.value);\n  };\n  return (\n    <div className=\"App bg-gradient-to-r from-gray-400 to-gray-700 min-h-screen\">\n      <div className=\"container mx-auto md:max-w-screen-lg py-8\">\n        {!hideEditor && (\n          <Editor\n            onHandleChangeInput={onHandleChangeInput}\n            inputValue={inputValue}\n            hidePreview={hidePreview}\n            setHidePreview={setHidePreview}\n          />\n        )}\n        {!hidePreview && (\n          <Preview\n            inputValue={inputValue}\n            id=\"preview\"\n            hideEditor={hideEditor}\n            setHideEditor={setHideEditor}>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: marked(inputValue, { renderer: renderer }),\n              }}\n              id=\"preview\"\n              className=\"bg-blue-300 p-5\"\n            />\n          </Preview>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}